{"version":3,"sources":["App.module.css","components/Cards/Cards.module.css","api/index.js","components/Chart/Chart.js","components/CountryPicker/CountryPicker.js","components/Cards/Cards.js","App.js","index.js","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css"],"names":["module","exports","url","fetchData","country","a","changeableUrl","axios","get","data","confirmed","recovered","deaths","lastUpdate","console","log","fetchDailyData","modifiedaAta","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","initialDailyData","fetchMyAPI","barChart","labels","datasets","label","backgroundColor","value","options","legend","display","title","text","lineChart","Date","toLocaleDateString","borderColor","fill","className","styles","container","Countries","handleCountryChange","setCountries","fetchAPI","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","Cards","Grid","spacing","justifyContent","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","duration","separator","toDateString","App","state","setState","this","CountryPicker","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5643c763.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2VU0p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__MCGNl\",\"infected\":\"Cards_infected__3IWKA\",\"recovered\":\"Cards_recovered__1cZww\",\"deaths\":\"Cards_deaths__13Bi4\"};","import axios from \"axios\";\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country)=>{\r\n    let changeableUrl = url;\r\n\r\n    \r\n    if (country) {\r\n        changeableUrl = `${url}/countries/${country}`;\r\n    }\r\n\r\n    try {\r\n        const { data: {confirmed, recovered, deaths, lastUpdate}} = await axios.get(changeableUrl);\r\n       \r\n        return {confirmed, recovered, deaths, lastUpdate};\r\n\r\n    } catch(error){\r\n        console.log(error)\r\n        \r\n    }\r\n    \r\n}\r\n\r\n\r\n\r\nexport const fetchDailyData = async ()=>{\r\n    try {\r\n        const { data } = await axios.get(`${url}/daily`);\r\n        \r\n        const modifiedaAta = data.map((dailyData)=>({\r\n            confirmed: dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,\r\n            date: dailyData.reportDate,            \r\n        }));\r\n        \r\n        return modifiedaAta;\r\n\r\n    } catch(error) {\r\n        console.log(error)\r\n\r\n    }\r\n}\r\n\r\nexport const fetchCountries = async ()=>{\r\n    try{\r\n        const {data:{ countries }} = await axios.get(`${url}/countries`);\r\n        return countries.map((country)=>country.name)\r\n    } catch(error){\r\n\r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n\r\nimport { fetchDailyData } from '../../api';\r\n\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\r\n  const [dailyData, setDailyData] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchMyAPI = async () => {\r\n      const initialDailyData = await fetchDailyData();\r\n\r\n      setDailyData(initialDailyData);\r\n    };\r\n\r\n    fetchMyAPI();\r\n  }, []);\r\n\r\n  const barChart = (\r\n    confirmed ? (\r\n      <Bar\r\n        data={{\r\n          labels: ['Infected', 'Recovered', 'Deaths'],\r\n          datasets: [\r\n            {\r\n              label: 'People',\r\n              backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\r\n              data: [confirmed.value, recovered.value, deaths.value],\r\n            },\r\n          ],\r\n        }}\r\n        options={{\r\n          legend: { display: false },\r\n          title: { display: true, text: `Current state in ${country}` },\r\n        }}\r\n      />\r\n    ) : null\r\n  );\r\n\r\n  const lineChart = (\r\n    dailyData[0] ? (\r\n      <Line\r\n        data={{\r\n          labels: dailyData.map(({ date }) => new Date(date).toLocaleDateString()),\r\n          datasets: [{\r\n            data: dailyData.map((data) => data.confirmed),\r\n            label: 'Infected',\r\n            borderColor: '#3333ff',\r\n            fill: true,\r\n          }, {\r\n            data: dailyData.map((data) => data.deaths),\r\n            label: 'Deaths',\r\n            borderColor: 'red',\r\n            backgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n            fill: true,\r\n          },  {\r\n            data: dailyData.map((data) => data.recovered),\r\n            label: 'Recovered',\r\n            borderColor: 'green',\r\n            backgroundColor: 'rgba(0, 255, 0, 0.5)',\r\n            fill: true,\r\n          },\r\n          ],\r\n        }}\r\n      />\r\n    ) : null\r\n  );\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      {country ? barChart : lineChart}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;","import React, { useState, useEffect } from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\n\r\nimport { fetchCountries } from '../../api';\r\n\r\nimport styles from './CountryPicker.module.css';\r\n\r\nconst Countries = ({ handleCountryChange }) => {\r\n  const [countries, setCountries] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setCountries(await fetchCountries());\r\n    };\r\n\r\n    fetchAPI();\r\n  }, []);\r\n\r\n  return (\r\n    <FormControl className={styles.formControl}>\r\n      <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n        <option value=\"\">United States</option>\r\n        {countries.map((country, i) => <option key={i} value={country}>{country}</option>)}\r\n      </NativeSelect>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default Countries;","import React from 'react';\r\nimport {Card, CardContent, Typography, Grid} from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames'\r\n\r\nimport styles from './Cards.module.css';\r\n\r\n\r\n\r\nconst Cards = ({data: {confirmed, recovered, deaths, lastUpdate}})=>{\r\n    \r\n    if(!confirmed){\r\n        return 'Loading...'\r\n    }\r\n    return (\r\n        <div className={styles.container}>\r\n            <Grid container spacing={3} justifyContent='center'>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography color='textSecondary' gutterBottom>Infected</Typography>\r\n                        <Typography variant='h5'>\r\n                            <CountUp \r\n                                start={0}\r\n                                end={confirmed.value}\r\n                                duration={2.5}\r\n                                separator=','\r\n                            />\r\n                        </Typography>\r\n                        <Typography text='textSecondary' >{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant='body2'>Number of active cases of COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography text='textSecondary' gutterBottom>Recovered</Typography>\r\n                        <Typography variant='h5'>\r\n                            <CountUp \r\n                                start={0}\r\n                                end={recovered.value}\r\n                                duration={2.5}\r\n                                separator=','/>\r\n                        </Typography>\r\n                        <Typography text='textSecondary' >{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant='body2'>Number ofrecoveries from COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography text='textSecondary' gutterBottom>Deaths</Typography>\r\n                        <Typography variant='h5'>\r\n                            <CountUp start={0}\r\n                                end={deaths.value}\r\n                                duration={2.5}\r\n                                separator=','/>\r\n                        </Typography>\r\n                        <Typography text='textSecondary' >{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant='body2'>Number of deaths caused COVID-19</Typography>\r\n                    </CardContent>\r\n\r\n                </Grid>\r\n\r\n            </Grid>\r\n        </div>\r\n    ) \r\n}\r\n\r\nexport default Cards;\r\n","import React from 'react';\r\n\r\nimport { Cards, CountryPicker, Chart } from './components';\r\nimport { fetchData } from './api/';\r\nimport styles from './App.module.css';\r\n\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    data: {},\r\n    country: '',\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const data = await fetchData();\r\n\r\n    this.setState({ data });\r\n  }\r\n\r\n  handleCountryChange = async (country) => {\r\n    const data = await fetchData(country);\r\n\r\n    this.setState({ data, country: country });\r\n  }\r\n\r\n  render() {\r\n    const { data, country } = this.state;\r\n\r\n    return (\r\n      <div className={styles.container}>\r\n        {/* <img className={styles.image} src={image} alt=\"COVID-19\" /> */}\r\n        <Cards data={data} />\r\n        <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n        <Chart data={data} country={country} /> \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'))","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__3sbaq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__3totM\"};"],"sourceRoot":""}